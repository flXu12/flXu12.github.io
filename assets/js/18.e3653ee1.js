(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{581:function(t,s,a){t.exports=a.p+"assets/img/daily-015.ecc2a3e0.png"},582:function(t,s,a){t.exports=a.p+"assets/img/daily-016.54c845c4.png"},583:function(t,s,a){t.exports=a.p+"assets/img/daily-017.e2b32a3f.png"},584:function(t,s,a){t.exports=a.p+"assets/img/daily-018.4a2f977b.png"},736:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("blockquote",[n("p",[t._v("总有一天你会知道，任何想要但觉得遥远的东西，努力的话是能碰得着的。")])]),t._v(" "),n("h2",{attrs:{id:"_1-为true"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-为true"}},[t._v("#")]),t._v(" 1. [] == ![]为true？")]),t._v(" "),n("p",[t._v("在chrome控制台输入：")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回true")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("上述表达式会输出true，为什么"),n("code",[t._v("[] == ![]")]),t._v("？")]),t._v(" "),n("blockquote",[n("p",[t._v("相等运算符(==) 检查其两个操作数是否相等，并返回Boolean结果。与严格相等运算符(===)不同，它会尝试强制类型转换并且比较不同类型的操作数。")])]),t._v(" "),n("p",[t._v("==运算符会对操作数进行"),n("strong",[t._v("隐式的强制类型转换")]),t._v("，转换规则如下：")]),t._v(" "),n("ul",[n("li",[t._v("如果两个操作数都是对象，则仅当两个操作数都引用同一个对象时才返回true；")]),t._v(" "),n("li",[t._v("如果一个操作数是null,另一个操作数是undefined，则返回true;")]),t._v(" "),n("li",[t._v("如果两个操作数是不同类型的，就会尝试在比较值钱将他们转换为相同类型：\n"),n("ul",[n("li",[t._v("当数字与字符串进行比较时，会尝试将字符串转换成数字；")]),t._v(" "),n("li",[t._v("若操作数之一是Boolean，则将布尔操作数转换为1或0")]),t._v(" "),n("li",[t._v("若操作数之一是对象，另一个是数字或字符串，会尝试将对象转换为原始值（valueOf()和toString()）")])])]),t._v(" "),n("li",[t._v("若操作数具有相同的类型：\n"),n("ul",[n("li",[t._v("String: 仅当两个操作数具有相同顺序的相同字符时才返回true")]),t._v(" "),n("li",[t._v("Number：仅当两个操作数具有相同的值时才返回true。"),n("strong",[t._v("+0与-0相等。若任一操作数为NaN，则返回false")])]),t._v(" "),n("li",[t._v("Boolean: 仅当操作数为两个true或者两个false时才返回true。")])])])]),t._v(" "),n("p",[t._v("根据上述转换规则，我们这样来一一化解[] == ![]：")]),t._v(" "),n("ol",[n("li",[n("code",[t._v("!")]),t._v("取非运算符优先级高于"),n("code",[t._v("==")]),t._v(",等号右边的![]进行取非后得到布尔值false，实际进行对比的操作数： "),n("code",[t._v("[] == false")]),t._v("；")]),t._v(" "),n("li",[t._v("两个操作数类型不同，操作数数之一是Boolean, 将布尔值false转换成数字0，实际进行对比的操作数： "),n("code",[t._v("[] == 0")]),t._v("；")]),t._v(" "),n("li",[t._v("两个操作数类型不同，操作数之一是对象，另一个是数字，则将对象"),n("code",[t._v("[]")]),t._v("转换成原始值为"),n("code",[t._v("''")]),t._v("，实际进行对比的操作数： "),n("code",[t._v("'' == 0")]),t._v("；")]),t._v(" "),n("li",[t._v("两个操作数类型不同，当数字与字符串进行比较时，将字符串"),n("code",[t._v("''")]),t._v("换成数字0，实际进行对比的操作数： "),n("code",[t._v("0 == 0")]),t._v("；")]),t._v(" "),n("li",[t._v("连个操作数类型相同，且都为Number类型，且数值相等，返回true。")])]),t._v(" "),n("p",[n("strong",[t._v("总结：")]),t._v(" "),n("code",[t._v("==")]),t._v("是糟粕，其中的隐式类型转换会出现各种你想象不到的结果，所以在使用时，用全等运算符(===)吧。")]),t._v(" "),n("h2",{attrs:{id:"_2-valueof-和tostring"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-valueof-和tostring"}},[t._v("#")]),t._v(" 2. valueOf()和toString()？")]),t._v(" "),n("p",[t._v("有点好奇"),n("code",[t._v("1")]),t._v("中转换时第3步将对象[]转换成原始值''的实现，原始值是怎么转换得来的呢？"),n("br"),t._v(" "),n("code",[t._v("valueOf()")]),t._v("和"),n("code",[t._v("toString()")]),t._v("是对象的两个方法，在控制台中输入"),n("code",[t._v("Object.prototype")]),t._v("会得到如下结果："),n("br"),t._v(" "),n("img",{attrs:{src:a(581),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"_2-1-object-prototype-valueof"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-object-prototype-valueof"}},[t._v("#")]),t._v(" 2.1 Object.prototype.valueOf()")]),t._v(" "),n("p",[n("strong",[n("code",[t._v("valueOf()")]),t._v("方法返回指定对象的原始值。")]),n("br"),t._v("\nJavaScript的许多内置对象都重写了"),n("code",[t._v("valueOf()")]),t._v("，以实现更适合自身的功能需要。如果对象没有原始值，则"),n("code",[t._v("valueOf()")]),t._v("返回对象本身。"),n("br"),t._v(" "),n("strong",[t._v("不同类型对象的valueOf()方法返回值")]),t._v(":")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("对象")]),t._v(" "),n("th",[t._v("返回值")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("Array")]),t._v(" "),n("td",[t._v("返回数组本身")])]),t._v(" "),n("tr",[n("td",[t._v("Boolean")]),t._v(" "),n("td",[t._v("布尔值")])]),t._v(" "),n("tr",[n("td",[t._v("Date")]),t._v(" "),n("td",[t._v("从1970年1月1日午夜开始计时的毫秒数UTC")])]),t._v(" "),n("tr",[n("td",[t._v("Function")]),t._v(" "),n("td",[t._v("函数本身")])]),t._v(" "),n("tr",[n("td",[t._v("Number")]),t._v(" "),n("td",[t._v("数字")])]),t._v(" "),n("tr",[n("td",[t._v("Object")]),t._v(" "),n("td",[t._v("默认值是对象本身")])]),t._v(" "),n("tr",[n("td",[t._v("String")]),t._v(" "),n("td",[t._v("字符串")])]),t._v(" "),n("tr",[n("td",[t._v("Math，Error")]),t._v(" "),n("td",[t._v("Math和Error对象没有valueOf()方法")])])])]),t._v(" "),n("p",[t._v("在控制台输入如下代码进行验证:")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("d")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ggg'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[t._v("输出结果如下图："),n("br"),t._v(" "),n("img",{attrs:{src:a(582),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"_2-2-object-prototype-tostring"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-object-prototype-tostring"}},[t._v("#")]),t._v(" 2.2 Object.prototype.toString()")]),t._v(" "),n("p",[n("strong",[n("code",[t._v("toString()")]),t._v("方法返回一个表示该对象的字符串。")]),n("br"),t._v("\n每个对象都有一个"),n("code",[t._v("toString()")]),t._v("方法，若该方法在自定义对象中未被覆盖，"),n("code",[t._v("toString()")]),t._v("返回"),n("code",[t._v("[object type]")]),t._v("，其中"),n("code",[t._v("type")]),t._v("是对象的类型。")]),t._v(" "),n("p",[n("strong",[t._v("使用"),n("code",[t._v("Object.prototype.toString()")]),t._v("检测对象类型")]),t._v(":")]),t._v(" "),n("blockquote",[n("p",[t._v("toString()调用null返回[object Null], undefined返回[object Undefined]。")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("c")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" h"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[t._v("输出结果如下图："),n("br"),t._v(" "),n("img",{attrs:{src:a(583),alt:""}})]),t._v(" "),n("p",[n("strong",[t._v("调用"),n("code",[t._v("toString()")]),t._v("方法返回对象字符串")]),t._v("："),n("br"),t._v("\ntoString()转换规则：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("对象")]),t._v(" "),n("th",[t._v("返回值")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("Array")]),t._v(" "),n("td",[t._v("以逗号分隔的字符串")])]),t._v(" "),n("tr",[n("td",[t._v("Boolean")]),t._v(" "),n("td",[t._v("布尔值对应的字符串")])]),t._v(" "),n("tr",[n("td",[t._v("Date")]),t._v(" "),n("td",[t._v("可读的时间字符串")])]),t._v(" "),n("tr",[n("td",[t._v("Function")]),t._v(" "),n("td",[t._v("函数源码字符串")])]),t._v(" "),n("tr",[n("td",[t._v("Number")]),t._v(" "),n("td",[t._v("数字字符串")])]),t._v(" "),n("tr",[n("td",[t._v("Object")]),t._v(" "),n("td",[t._v("[object type]，其中type为对象类型")])]),t._v(" "),n("tr",[n("td",[t._v("String")]),t._v(" "),n("td",[t._v("字符串")])]),t._v(" "),n("tr",[n("td",[t._v("Math")]),t._v(" "),n("td",[t._v("'[object Math]'")])])])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("d")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fff'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" h"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lll'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[t._v("输出结果如下图："),n("br"),t._v(" "),n("img",{attrs:{src:a(584),alt:""}})]),t._v(" "),n("p",[n("strong",[n("font",{attrs:{color:"#0000dd"}},[t._v("重要：从上可以看出，对于对象，不论是检测类型还是返回对象字符串，最终结果都是[object Object]")])],1)]),t._v(" "),n("h3",{attrs:{id:"_2-3-valueof-vs-tostring"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-valueof-vs-tostring"}},[t._v("#")]),t._v(" 2.3 valueOf() VS toString()")]),t._v(" "),n("p",[n("strong",[t._v("相同点")])]),t._v(" "),n("ul",[n("li",[t._v("自动调用")]),t._v(" "),n("li",[t._v("可以被重写\n"),n("strong",[t._v("不同点")])]),t._v(" "),n("li",[t._v("默认返回值不同")]),t._v(" "),n("li",[t._v("自动调用时，对于不同类型调用顺序不同：\n"),n("ul",[n("li",[t._v("在进行对象转换时，优先调用"),n("code",[t._v("toString()")])]),t._v(" "),n("li",[t._v("在对象转字符串类型时，优先调用"),n("code",[t._v("toString()")])]),t._v(" "),n("li",[t._v("在对象转数字时，优先调用"),n("code",[t._v("valueOf()")])]),t._v(" "),n("li",[t._v("在使用运算操作符时，"),n("code",[t._v("valueOf()")]),t._v("优先级高于"),n("code",[t._v("toString()")])])])])]),t._v(" "),n("h2",{attrs:{id:"_3-类型转换之瞧瞧返回了啥"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-类型转换之瞧瞧返回了啥"}},[t._v("#")]),t._v(" 3. 类型转换之瞧瞧返回了啥？")]),t._v(" "),n("p",[t._v("类型转换规则看上述两条知识点就够啦，Javascript变化多端，咱们继续来看看类型转换的问题吧～")]),t._v(" "),n("h3",{attrs:{id:"_3-1-第一题-nan"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-第一题-nan"}},[t._v("#")]),t._v(" 3.1 第一题：NaN")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -> baNaNa")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -> fooNaN")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[n("strong",[t._v("关于"),n("code",[t._v("NaN")]),t._v("你必须要知道的事")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("NaN")]),t._v("是一个全局对象的属性，表示不是一个数字，通常是在计算失败或尝试讲一个字符串解析成数字但失败了的时候作为返回值出现。")]),t._v(" "),n("li",[n("code",[t._v("NaN")]),t._v("通过"),n("code",[t._v("==")]),t._v(", "),n("code",[t._v("!=")]),t._v(", "),n("code",[t._v("===")]),t._v(", "),n("code",[t._v("!==")]),t._v("与任何值（包括"),n("code",[t._v("NaN")]),t._v("）比较都不相等（即返回false）")])]),t._v(" "),n("p",[n("strong",[t._v("关于相加运算符(+)你必须要知道的事")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("相加运算符用于对两个操作数进行相加运算。如果操作数作为字符串，则该运算符将两个操作数连接成一个字符串；")]),t._v(" "),n("li",[t._v('"+"两侧只要有一侧是字符串，另一侧的数字则会自动转换成字符串，因为其中存在隐式转换。')])]),t._v(" "),n("p",[n("strong",[t._v("题解")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("以"),n("code",[t._v('"b" + "a" + + "a" + "a"')]),t._v("为例，首先+运算符优先级高于相加，会尝试将字符串a转换成数字，明显会转换失败,得到"),n("code",[t._v("NaN")]),t._v(',则我们实际进行相加的表达式是： "b" + "a" + NaN + "a";')]),t._v(" "),n("li",[t._v('由于字符串与数字类型无法直接相加，因此这里会有一个隐式类型转换将NaN转成字符串，则实际进行相加的表达式是： "b" + "a" + "NaN" + "a"')])])])}),[],!1,null,null,null);s.default=e.exports}}]);