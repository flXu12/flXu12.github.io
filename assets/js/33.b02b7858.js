(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{624:function(e,t,r){e.exports=r.p+"assets/img/skill-005.4880c177.png"},625:function(e,t,r){e.exports=r.p+"assets/img/skill-006.fb39aae2.png"},754:function(e,t,r){"use strict";r.r(t);var a=r(3),_=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("blockquote",[a("p",[e._v("立春，常新，常总结。")])]),e._v(" "),a("h2",{attrs:{id:"_1-使用patch-package给npm包打补丁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用patch-package给npm包打补丁"}},[e._v("#")]),e._v(" 1. 使用patch-package给npm包打补丁")]),e._v(" "),a("p",[e._v("在日常工作中，我们必不可免地会使用到一些第三方库，当我们因为一些原因不得不修改第三方库的时候，可以尝试使用"),a("a",{attrs:{href:"https://github.com/ds300/patch-package",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("patch-package")]),a("OutboundLink")],1),e._v("，这个npm包允许开发者在不修改第三方库的情况下进行补丁(patch)。"),a("br"),e._v("\n需要额外说明一点的是，尽管"),a("code",[e._v("patch-package")]),e._v("非常有用，但这可能导致后续的维护问题，尽可能通过与第三方库的维护者合作，以实现问题修复或特性支持。")]),e._v(" "),a("h2",{attrs:{id:"_2-摆脱代理工具-使用chrome-override功能mock数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-摆脱代理工具-使用chrome-override功能mock数据"}},[e._v("#")]),e._v(" 2. 摆脱代理工具，使用chrome override功能mock数据")]),e._v(" "),a("p",[e._v("chrome 117版本推出了新特性：在"),a("code",[e._v("network")]),e._v("面板支持"),a("code",[e._v("overrides")]),e._v("选项。"),a("br"),e._v("\n前端之前经常会通过各种代理工具来实现mock数据，现在chrome原生支持，体验相当之丝滑。")]),e._v(" "),a("p",[a("img",{attrs:{src:r(624),alt:""}})]),e._v(" "),a("p",[a("img",{attrs:{src:r(625),alt:""}})]),e._v(" "),a("h2",{attrs:{id:"_3-是哪个小傻瓜还在用npm-link"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-是哪个小傻瓜还在用npm-link"}},[e._v("#")]),e._v(" 3. 是哪个小傻瓜还在用npm link？")]),e._v(" "),a("p",[e._v("作为npm包的维护者，我们可能时长会将其引用至项目进行验证。在了解"),a("a",{attrs:{href:"https://github.com/wclr/yalc",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("yalc")]),a("OutboundLink")],1),e._v("之前，我都是使用"),a("code",[e._v("npm link")]),e._v("或"),a("code",[e._v("yarn link")]),e._v("通过创建软链进行调试。"),a("br"),e._v("\n了解"),a("code",[e._v("yalc")]),e._v("并使用后，真香。")]),e._v(" "),a("p",[a("code",[e._v("npm link")]),e._v("或"),a("code",[e._v("yarn link")]),e._v("的原理：")]),e._v(" "),a("ul",[a("li",[e._v("在全局创建一个软链指向本地npm包的dist目录")]),e._v(" "),a("li",[e._v("在项目组通过此软链将"),a("code",[e._v("node_modules/${npm}")]),e._v("指向到dist目录"),a("br"),e._v("\n缺点很明显：")]),e._v(" "),a("li",[e._v("全局软链如果不及时删除势必影响其他项目的npm依赖版本；")]),e._v(" "),a("li",[e._v("每次npm包更新后需要先移除软链再重新创建软链；")]),e._v(" "),a("li",[e._v("除了对项目本身的node_modules有影响外，还会导致各种奇怪的问题，比如npm包更新或安装失败等等。")])]),e._v(" "),a("p",[a("code",[e._v("yalc")]),e._v("是项目级别的，不会污染全局，npm包更新后主动推送即可，无需重建软链，因此更加安全方便快捷。")])])}),[],!1,null,null,null);t.default=_.exports}}]);